import subprocess
import pexpect

# List of Nmap commands
commands = [
    'nmap -sn 192.168.1.1/24',
    'nmap -p 80,443 192.168.1.1',
    'nmap -A 192.168.1.105'
]

# Function to run commands and capture output
class CyberTools():
    def __init__(self):
        self.nmap_memory = []
        self.metasploit_memory = []

    def run_nmap_commands(self, commands):
        results = []
        for command in commands:
            try:
                result = subprocess.run(command, shell=True, text=True, check=True, capture_output=True)
                results.append(result.stdout)
                self.nmap_memory.append(result.stdout)
            except subprocess.CalledProcessError as e:
                results.append(e.stderr)
                self.nmap_memory.append(e.stderr)
        self.nmap_memory.append('< NEW >')
        return results

    def run_metasploit_commands(self, commands):
        child = pexpect.spawn('/usr/bin/msfconsole', timeout=120)
        results = []
        for command in commands:
            child.sendline(command)  # Send the command to msfconsole
            child.expect('msf6 >')   # Wait for the prompt to return
            results.append(child.before)
            self.metasploit_memory.append(child.before)

        child.sendline('exit')
        child.close()
        self.metasploit_memory.append('< NEW >') 
        return results


